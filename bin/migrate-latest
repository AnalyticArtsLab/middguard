#!/usr/bin/env node

var program = require('commander');
var chalk = require('chalk');
var knex = require('knex');
var path = require('path');

program
  .version('0.0.1')
  .option('--debug', 'Run with debugging.', false)
  .option('--knexfile [path]', 'Specify the knexfile path.', 'knexfile.js')
  .option('--env [name]', 'environment, default: process.env.NODE_ENV || development')
  .parse(process.argv);

var internalMigrationsConfig = {
  directory: path.join(__dirname, '../middguard/migrate/migrations')
};

function initKnex(program) {
  var config = require(path.resolve(program.knexfile));

  var env = program.env || process.env.NODE_ENV;
  var defaultEnv = 'development';

  if (!env && typeof config[defaultEnv] === 'object') {
    env = defaultEnv;
  }

  if (env) {
    console.log('Using environment:', chalk.magenta(env));
    config = config[env];
  }

  if (program.debug) {
    config.debug = program.debug;
  }

  return knex(config);
};

initKnex(program).migrate.latest(internalMigrationsConfig)
.spread(function(batchNo, log) {
  if (log.length === 0) {
    console.log(chalk.cyan('Already up to date.'));
    process.exit(0);
  }
  console.log(chalk.green(`Batch ${batchNo} run: ${log.length} migrations`));
  console.log(chalk.cyan(log.join('\n')));
  process.exit(0);
});
