#!/usr/bin/env node

let program = require('commander');
const chalk = require('chalk');
const _ = require('lodash');
const Promise = require('bluebird');
const fs = Promise.promisifyAll(require('fs'));
const path = require('path');

_.templateSettings.interpolate = /<%-([\s\S]+?)%>/g;

program
  .version(require('../package.json').version)
  .option('--middguard-path [path]',
          'Path to MiddGuard installation', 'middguard')
  .option('--secret-key [key]', 'Secret key for development', 'keepmesecret')
  .parse(process.argv);

return Promise.map([
  'app.js',
  'knexfile.js'
], (filename) => {
  return Promise.props({
    name: filename,
    file: fs.readFileAsync(path.join(__dirname, 'templates', filename), 'utf-8')
  });
})
.each((file) => {
  const templated = _.template(file.file)(program);
  return fs.writeFileAsync(path.join(process.cwd(), file.name), templated);
})
.each((file) => {
  console.log(chalk.green(`Wrote ${file.name}.`));
});
